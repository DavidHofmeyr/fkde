// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// f_kde_mix
NumericVector f_kde_mix(NumericVector x, double h, int n, int ord, NumericVector betas);
RcppExport SEXP _fkde_f_kde_mix(SEXP xSEXP, SEXP hSEXP, SEXP nSEXP, SEXP ordSEXP, SEXP betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    rcpp_result_gen = Rcpp::wrap(f_kde_mix(x, h, n, ord, betas));
    return rcpp_result_gen;
END_RCPP
}
// f_kde_mix_grid
NumericVector f_kde_mix_grid(NumericVector x, double h, int n, int ord, NumericVector betas, int ngrid, double mn, double MX);
RcppExport SEXP _fkde_f_kde_mix_grid(SEXP xSEXP, SEXP hSEXP, SEXP nSEXP, SEXP ordSEXP, SEXP betasSEXP, SEXP ngridSEXP, SEXP mnSEXP, SEXP MXSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< int >::type ngrid(ngridSEXP);
    Rcpp::traits::input_parameter< double >::type mn(mnSEXP);
    Rcpp::traits::input_parameter< double >::type MX(MXSEXP);
    rcpp_result_gen = Rcpp::wrap(f_kde_mix_grid(x, h, n, ord, betas, ngrid, mn, MX));
    return rcpp_result_gen;
END_RCPP
}
// f_kde_mix_binned
NumericVector f_kde_mix_binned(NumericVector x, double h, int n, int ord, NumericVector betas, int nbin, double min, double max);
RcppExport SEXP _fkde_f_kde_mix_binned(SEXP xSEXP, SEXP hSEXP, SEXP nSEXP, SEXP ordSEXP, SEXP betasSEXP, SEXP nbinSEXP, SEXP minSEXP, SEXP maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< int >::type nbin(nbinSEXP);
    Rcpp::traits::input_parameter< double >::type min(minSEXP);
    Rcpp::traits::input_parameter< double >::type max(maxSEXP);
    rcpp_result_gen = Rcpp::wrap(f_kde_mix_binned(x, h, n, ord, betas, nbin, min, max));
    return rcpp_result_gen;
END_RCPP
}
// df_kde
NumericVector df_kde(NumericVector x, double h, int n, int ord);
RcppExport SEXP _fkde_df_kde(SEXP xSEXP, SEXP hSEXP, SEXP nSEXP, SEXP ordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type ord(ordSEXP);
    rcpp_result_gen = Rcpp::wrap(df_kde(x, h, n, ord));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fkde_f_kde_mix", (DL_FUNC) &_fkde_f_kde_mix, 5},
    {"_fkde_f_kde_mix_grid", (DL_FUNC) &_fkde_f_kde_mix_grid, 8},
    {"_fkde_f_kde_mix_binned", (DL_FUNC) &_fkde_f_kde_mix_binned, 8},
    {"_fkde_df_kde", (DL_FUNC) &_fkde_df_kde, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_fkde(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
